<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:context="http://www.springframework.org/schema/context"
	xmlns:mvc="http://www.springframework.org/schema/mvc"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:task="http://www.springframework.org/schema/task"
	xsi:schemaLocation="http://www.springframework.org/schema/beans
	       http://www.springframework.org/schema/beans/spring-beans-3.1.xsd
	       http://www.springframework.org/schema/context
	       http://www.springframework.org/schema/context/spring-context-3.1.xsd
	       http://www.springframework.org/schema/mvc
	       http://www.springframework.org/schema/mvc/spring-mvc-3.1.xsd
	       http://www.springframework.org/schema/tool
	       http://www.springframework.org/schema/tool/spring-tool-3.1.xsd
	       http://www.springframework.org/schema/tx
           http://www.springframework.org/schema/tx/spring-tx-3.1.xsd
           http://www.springframework.org/schema/task  
		   http://www.springframework.org/schema/task/spring-task-3.1.xsd " default-autowire="byName">
	       
	<context:component-scan base-package="com.ge.pmms" />
	<!-- register DefaultAnnotationHandlerMapping and AnnotationMethodHandlerAdapter -->
	
	<!-- quartz annotation -->
	<!-- <task:annotation-driven/>  -->
	<!-- quartz bean.-->
	<!-- 计划工单提醒 -->
	<bean id="taskPWO" class="org.springframework.scheduling.quartz.MethodInvokingJobDetailFactoryBean">
    	<!-- 调用的类 -->
        <property name="targetObject">
        	<ref bean="planInfoQtz"/>
        </property>
        <!-- 调用类中的方法 -->
       	<property name="targetMethod">
        	<value>generatePWO</value>
        </property>
	</bean>
    <!-- 定义触发时间 -->
    <!-- 计划工单提醒 -->
    <!--  <bean id="doTimePWO" class="org.springframework.scheduling.quartz.CronTriggerBean"> -->
	<bean id="doTimePWO" class="org.springframework.scheduling.quartz.CronTriggerFactoryBean">
    	<property name="jobDetail">
       		<ref bean="taskPWO"/>
        </property>
        <!-- cron表达式 -->
        <property name="cronExpression">
        	<value>0 0 12 L * ?</value> <!--0 0/2 * * * ?每隔两分钟; 0 0 12 L * ?每个月最后一天上午12点; 0 0/1 * 29L * ?每个月倒数第29天的每小时每隔1分钟;0 0/1 * ? * THU每个月的星期四的每小时每隔一分钟 -->
        </property>
	</bean>
         
    <!-- *****************************备件安全库存邮件和短信提醒Start********************************************* -->
	<bean id="taskSP" class="org.springframework.scheduling.quartz.MethodInvokingJobDetailFactoryBean">
    	<!-- 调用的类 -->
    	<property name="targetObject">
        	<ref bean="SPMSafetyQtz"/>
        </property>
        <!-- 调用类中的方法 -->
        <property name="targetMethod">
        	<value>spReminder</value>
        </property>
	</bean>
    <!-- 定义触发时间 -->
    <bean id="doTimeSP" class="org.springframework.scheduling.quartz.CronTriggerFactoryBean">
    	<property name="jobDetail">
        	<ref bean="taskSP"/>
        </property>
        <!-- cron表达式 -->
        <property name="cronExpression">  
        	<value>0 10 12 L * ?</value> <!-- 0 0 12 L * ? 每个月最后一天上午12点;0 0/1 * * * ? 每隔一分钟 -->
        </property>
	</bean>  
    <!-- *****************************备件安全库存邮件和短信提醒End********************************************* -->  
	
	<!--间接物料邮件短信提醒-->
	<bean id="idmSafetyQtz" class="com.ge.pmms.qutz.IdmSafetyQtz">
    </bean>
    
    <bean id="jobtask" class="org.springframework.scheduling.quartz.MethodInvokingJobDetailFactoryBean"> 
    	<!-- invoke class --> 
    	<property name="targetObject">
        	<ref bean="idmSafetyQtz"/>
        </property>
        <property name="targetMethod">
        	<value>startRun</value>
         </property>
    </bean>
    <!-- define trigger time --> 
    <bean id="doIdmTime" class="org.springframework.scheduling.quartz.CronTriggerFactoryBean"> 
        <property name="jobDetail"> 
            <ref bean="jobtask"/> 
        </property> 
        <!-- Cron expression --> 
        <property name="cronExpression"> 
       		 <!-- every Sat morning 0 start -->
             <value>0 20 12 L * ?</value> 
        </property> 
    </bean> 
   
     <!-- 总管理类 如果将lazy-init='false'那么容器启动就会执行调度程序  -->
	<bean id="startQuertz" lazy-init="false" autowire="no" class="org.springframework.scheduling.quartz.SchedulerFactoryBean">
    	<property name="triggers">
         	<list>
            	<ref bean="doTimePWO"/>
                <ref bean="doIdmTime"/>
                <ref bean="doTimeSP"/>
        	</list>
    	</property>
	</bean>
	<!-- Quartz task end-->
	
	<mvc:annotation-driven />
	<!--To enable @RequestMapping process on type level and method level -->
	<bean
		class="org.springframework.web.servlet.mvc.annotation.DefaultAnnotationHandlerMapping" />
	<bean
		class="org.springframework.web.servlet.mvc.annotation.AnnotationMethodHandlerAdapter" />

	<!-- 导入外部的properties文件 -->
	  
	<context:property-placeholder location="classpath:jdbc.properties" />
	
	<!-- Below line added in order to enable spring declarative transaction management using annotation - By Jitendra -->
	<tx:annotation-driven transaction-manager="txManager" />
	
	<!--  
	<context:property-placeholder location="classpath:message_zh.properties" />
	<context:property-placeholder location="classpath:message_en.properties" />
    -->


	<!-- 配置sessionFactory -->
	<bean id="hibernateTemplate" class="org.springframework.orm.hibernate3.HibernateTemplate">
		    <property name="sessionFactory" ref="sessionFactory"/>
    </bean>
	
	<bean id="sessionFactory"
		class="org.springframework.orm.hibernate3.LocalSessionFactoryBean">
		<!-- 指定hibernate配置文件的位置 -->
		<property name="configLocation" value="classpath:hibernate.cfg.xml" />
		<property name="dataSource" ref="dataSource"/>
	</bean>
	
	<bean id="dataSource" class="org.springframework.jndi.JndiObjectFactoryBean">
        <property name="jndiName" value="java:/MSSQLDS" />
    </bean>
    
	<!-- 允许对静态资源文件的访问 --> 
	<mvc:default-servlet-handler/>

	<!-- 配置声名式事务管理(采用注解的方式) -->
	<bean id="txManager"
		class="org.springframework.orm.hibernate3.HibernateTransactionManager">
		<property name="sessionFactory" ref="sessionFactory" />
	</bean>
	<tx:annotation-driven transaction-manager="txManager" />
	
	<!--  
	<bean id="localeResolver"
		class="org.springframework.web.servlet.i18n.SessionLocaleResolver">
		<property name="defaultLocale" value="zh" />
	</bean>
 
	  <mvc:interceptors>
		  <bean class="org.springframework.web.servlet.i18n.LocaleChangeInterceptor">
		   <property name="paramName" value="lang" />
		  </bean>
	 </mvc:interceptors>
	
	<bean id="messageSource" class="org.springframework.context.support.ReloadableResourceBundleMessageSource">
	  <property name="basename" value="classpath:message" />
	  <property name="defaultEncoding" value="UTF-8" />
	</bean>
	-->
	
	<bean
		class="org.springframework.web.servlet.view.ContentNegotiatingViewResolver">
		<property name="mediaTypes">
			<map>
				<entry key="json" value="application/json" />
				<entry key="xml" value="application/xml" />
				<entry key="html" value="text/html" />
			</map>
		</property>
		<property name="viewResolvers">
			<list>
				<bean
					class="org.springframework.web.servlet.view.BeanNameViewResolver" />
				<bean
					class="org.springframework.web.servlet.view.InternalResourceViewResolver">
					<property name="prefix" value="/WEB-INF/jsp/"/>
					<property name="suffix" value=".jsp"/>
				</bean>
			</list>
		</property>
	</bean>
    
    <bean id="multipartResolver" class="org.springframework.web.multipart.commons.CommonsMultipartResolver">  
        <property name="defaultEncoding" value="utf-8"></property>   
        <property name="maxUploadSize" value="10485760000"></property>  
        <property name="maxInMemorySize" value="40960"></property>  
   </bean>
   
</beans>